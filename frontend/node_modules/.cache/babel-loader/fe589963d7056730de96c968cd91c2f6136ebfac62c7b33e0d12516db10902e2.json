{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../API/axios\";\nconst initialState = {\n  data: null,\n  status: \"loading\"\n};\nexport const fetchUser = createAsyncThunk(\"auth/fethcUser\", async params => {\n  const {\n    data\n  } = await axios.post(\"/auth/login\", params);\n  return data;\n});\nexport const fetchUserMe = createAsyncThunk(\"auth/fethcUserMe\", async () => {\n  const {\n    data\n  } = await axios.get(\"/auth/user\");\n  return data;\n});\nexport const fetchUserRegister = createAsyncThunk(\"auth/fethcUserMe\", async () => {\n  const {\n    data\n  } = await axios.get(\"/auth/register\");\n  return data;\n});\nconst sliceAuth = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    logout: state => {\n      state.data = null;\n    }\n  },\n  extraReducers: builder => {\n    // user\n    builder.addCase(fetchUser.fulfilled, (state, action) => {\n      state.data = action.payload;\n      state.status = \"success\";\n    });\n    builder.addCase(fetchUser.pending, (state, action) => {\n      state.data = action.payload;\n      state.status = \"loading\";\n    });\n    builder.addCase(fetchUser.rejected, (state, action) => {\n      state.status = \"error\";\n    });\n    // me\n    builder.addCase(fetchUserMe.fulfilled, (state, action) => {\n      state.data = action.payload;\n      state.status = \"success\";\n    });\n    builder.addCase(fetchUserMe.pending, (state, action) => {\n      state.data = action.payload;\n      state.status = \"loading\";\n    });\n    builder.addCase(fetchUserMe.rejected, (state, action) => {\n      state.status = \"error\";\n    });\n  }\n});\nexport const {\n  logout\n} = sliceAuth.actions;\nexport const selectIsAuth = state => Boolean(state.auth.data);\nexport default sliceAuth.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","data","status","fetchUser","params","post","fetchUserMe","get","fetchUserRegister","sliceAuth","name","reducers","logout","state","extraReducers","builder","addCase","fulfilled","action","payload","pending","rejected","actions","selectIsAuth","Boolean","auth","reducer"],"sources":["C:/Users/skaullin62/Desktop/ReactAppsTS/fullstack/frontend/src/Redux/slices/sliceAuth.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../API/axios\";\r\n\r\nconst initialState = {\r\n  data: null,\r\n  status: \"loading\",\r\n};\r\n\r\nexport const fetchUser = createAsyncThunk(\"auth/fethcUser\", async (params) => {\r\n  const { data } = await axios.post(\"/auth/login\", params);\r\n\r\n  return data;\r\n});\r\n\r\nexport const fetchUserMe = createAsyncThunk(\"auth/fethcUserMe\", async () => {\r\n  const { data } = await axios.get(\"/auth/user\");\r\n\r\n  return data;\r\n});\r\n\r\nexport const fetchUserRegister = createAsyncThunk(\r\n  \"auth/fethcUserMe\",\r\n  async () => {\r\n    const { data } = await axios.get(\"/auth/register\");\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\nconst sliceAuth = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.data = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // user\r\n    builder.addCase(fetchUser.fulfilled, (state, action) => {\r\n      state.data = action.payload;\r\n      state.status = \"success\";\r\n    });\r\n    builder.addCase(fetchUser.pending, (state, action) => {\r\n      state.data = action.payload;\r\n      state.status = \"loading\";\r\n    });\r\n    builder.addCase(fetchUser.rejected, (state, action) => {\r\n      state.status = \"error\";\r\n    });\r\n    // me\r\n    builder.addCase(fetchUserMe.fulfilled, (state, action) => {\r\n      state.data = action.payload;\r\n      state.status = \"success\";\r\n    });\r\n    builder.addCase(fetchUserMe.pending, (state, action) => {\r\n      state.data = action.payload;\r\n      state.status = \"loading\";\r\n    });\r\n    builder.addCase(fetchUserMe.rejected, (state, action) => {\r\n      state.status = \"error\";\r\n    });\r\n  },\r\n});\r\n\r\nexport const { logout } = sliceAuth.actions;\r\nexport const selectIsAuth = (state) => Boolean(state.auth.data);\r\n\r\nexport default sliceAuth.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,iBAAiB;AAEnC,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGL,gBAAgB,CAAC,gBAAgB,EAAE,MAAOM,MAAM,IAAK;EAC5E,MAAM;IAAEH;EAAK,CAAC,GAAG,MAAMF,KAAK,CAACM,IAAI,CAAC,aAAa,EAAED,MAAM,CAAC;EAExD,OAAOH,IAAI;AACb,CAAC,CAAC;AAEF,OAAO,MAAMK,WAAW,GAAGR,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EAC1E,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAMF,KAAK,CAACQ,GAAG,CAAC,YAAY,CAAC;EAE9C,OAAON,IAAI;AACb,CAAC,CAAC;AAEF,OAAO,MAAMO,iBAAiB,GAAGV,gBAAgB,CAC/C,kBAAkB,EAClB,YAAY;EACV,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAMF,KAAK,CAACQ,GAAG,CAAC,gBAAgB,CAAC;EAElD,OAAON,IAAI;AACb,CACF,CAAC;AAED,MAAMQ,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,MAAM;EACZV,YAAY;EACZW,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACZ,IAAI,GAAG,IAAI;IACnB;EACF,CAAC;EACDa,aAAa,EAAGC,OAAO,IAAK;IAC1B;IACAA,OAAO,CAACC,OAAO,CAACb,SAAS,CAACc,SAAS,EAAE,CAACJ,KAAK,EAAEK,MAAM,KAAK;MACtDL,KAAK,CAACZ,IAAI,GAAGiB,MAAM,CAACC,OAAO;MAC3BN,KAAK,CAACX,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC;IACFa,OAAO,CAACC,OAAO,CAACb,SAAS,CAACiB,OAAO,EAAE,CAACP,KAAK,EAAEK,MAAM,KAAK;MACpDL,KAAK,CAACZ,IAAI,GAAGiB,MAAM,CAACC,OAAO;MAC3BN,KAAK,CAACX,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC;IACFa,OAAO,CAACC,OAAO,CAACb,SAAS,CAACkB,QAAQ,EAAE,CAACR,KAAK,EAAEK,MAAM,KAAK;MACrDL,KAAK,CAACX,MAAM,GAAG,OAAO;IACxB,CAAC,CAAC;IACF;IACAa,OAAO,CAACC,OAAO,CAACV,WAAW,CAACW,SAAS,EAAE,CAACJ,KAAK,EAAEK,MAAM,KAAK;MACxDL,KAAK,CAACZ,IAAI,GAAGiB,MAAM,CAACC,OAAO;MAC3BN,KAAK,CAACX,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC;IACFa,OAAO,CAACC,OAAO,CAACV,WAAW,CAACc,OAAO,EAAE,CAACP,KAAK,EAAEK,MAAM,KAAK;MACtDL,KAAK,CAACZ,IAAI,GAAGiB,MAAM,CAACC,OAAO;MAC3BN,KAAK,CAACX,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC;IACFa,OAAO,CAACC,OAAO,CAACV,WAAW,CAACe,QAAQ,EAAE,CAACR,KAAK,EAAEK,MAAM,KAAK;MACvDL,KAAK,CAACX,MAAM,GAAG,OAAO;IACxB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEU;AAAO,CAAC,GAAGH,SAAS,CAACa,OAAO;AAC3C,OAAO,MAAMC,YAAY,GAAIV,KAAK,IAAKW,OAAO,CAACX,KAAK,CAACY,IAAI,CAACxB,IAAI,CAAC;AAE/D,eAAeQ,SAAS,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}